- name: install nvidia gpu drivers
  hosts: localhost
  become: no
  gather_facts: no

  tasks:
    - name: ensure project exists
      k8s:
        state: present
        definition:
          apiVersion: project.openshift.io/v1
          kind: Project
          metadata:
            name: gpu-operator-resources
          spec:

    - name: ensure nfd subscription exists
      k8s:
        state: present
        definition:
          apiVersion: operators.coreos.com/v1alpha1
          kind: Subscription
          metadata:
            name: "{{ lookup('ini', 'nfd_name section=operators file=/app/versions.ini') }}"
            namespace: openshift-operators
          spec:
            channel: "{{ lookup('ini', 'nfd_channel section=operators file=/app/versions.ini') }}"
            name: "{{ lookup('ini', 'nfd_name section=operators file=/app/versions.ini') }}"
            source: "{{ lookup('ini', 'nfd_source section=operators file=/app/versions.ini') }}"
            sourceNamespace: openshift-marketplace
            installPlanApproval: "Automatic"

    - name: wait for install to start
      pause:
        seconds: 30

    - name: lookup install plan
      set_fact:
        install_plan: |
          "{{ lookup('k8s',
                     api_version='operators.coreos.com/v1alpha1',
                     kind='Subscription',
                     resource=lookup('ini', 'nfd_name section=operators file=/app/versions.ini'),
                     namespace='openshift-operators',
                     wantlist=True)[0].status.installplan.name  }}"
      register: ip_lkp
      until: ip_lkp is success
      retries: 60
      delay: 15

    - name: wait for install to complete
      assert:
        that: |
          "{{ lookup('k8s',
                     api_version='operators.coreos.com/v1alpha1',
                     kind='InstallPlan',
                     resource=install_plan,
                     namespace='openshift-operators',
                     wantlist=True)[0].status.phase | default('error') == 'Complete' }}"
      register: op_lkp
      until: op_lkp is success
      retries: 60
      delay: 15

    - name: ensure nvidia subscription exists
      k8s:
        state: present
        definition:
          apiVersion: operators.coreos.com/v1alpha1
          kind: Subscription
          metadata:
            name: gpu-operator-certified
            namespace: openshift-operators
          spec:
            channel: "{{ lookup('ini', 'nvidia_channel section=operators file=/app/versions.ini') }}"
            name: "{{ lookup('ini', 'nvidia_name section=operators file=/app/versions.ini') }}"
            source: "{{ lookup('ini', 'nvidia_source section=operators file=/app/versions.ini') }}"
            sourceNamespace: openshift-marketplace
            installPlanApproval: "Automatic"

    - name: wait for install to start
      pause:
        seconds: 30

    - name: lookup install plan
      set_fact:
        install_plan: |
          "{{ lookup('k8s',
                     api_version='operators.coreos.com/v1alpha1',
                     kind='Subscription',
                     resource=lookup('ini', 'nvidia_name section=operators file=/app/versions.ini'),
                     namespace='openshift-operators',
                     wantlist=True)[0].status.installplan.name  }}"

    - name: wait for install to complete
      assert:
        that: |
          "{{ lookup('k8s',
                     api_version='operators.coreos.com/v1alpha1',
                     kind='InstallPlan',
                     resource=install_plan,
                     namespace='openshift-operators',
                     wantlist=True)[0].status.phase | default('error') == 'Complete' }}"
      register: op_lkp
      until: op_lkp is success
      retries: 60
      delay: 15

    - name: create nfd server
      k8s:
        state: present
        definition:
          apiVersion: nfd.openshift.io/v1alpha1
          kind: NodeFeatureDiscovery
          metadata:
            name: nfd-master-server
            namespace: gpu-operator-resources
          spec:
            namespace: openshift-nfd
      register: cp_install
      until: cp_install is success
      retries: 30
      delay: 15

    - name: create nvidia clusterpolicy
      k8s:
        state: present
        definition:
          apiVersion: nvidia.com/v1
          kind: ClusterPolicy
          metadata:
            name: gpu-clusterpolicy
            namespace: gpu-operator-resources
          spec:
            dcgmExporter:
              nodeSelector: {}
              imagePullSecrets: []
              resources: {}
              affinity: {}
              podSecurityContext: {}
              repository: nvcr.io/nvidia/k8s
              securityContext: {}
              version: 'sha256:85016e39f73749ef9769a083ceb849cae80c31c5a7f22485b3ba4aa590ec7b88'
              image: dcgm-exporter
              tolerations: []
            devicePlugin:
              nodeSelector: {}
              imagePullSecrets: []
              resources: {}
              affinity: {}
              podSecurityContext: {}
              repository: nvcr.io/nvidia
              securityContext: {}
              version: 'sha256:45b459c59d13a1ebf37260a33c4498046d4ade7cc243f2ed71115cd81054cd85'
              image: k8s-device-plugin
              tolerations: []
            driver:
              nodeSelector: {}
              imagePullSecrets: []
              resources: {}
              affinity: {}
              podSecurityContext: {}
              repository: nvcr.io/nvidia
              securityContext: {}
              repoConfig:
                configMapName: ''
                destinationDir: ''
              version: 'sha256:324e9dc265dec320207206aa94226b0c8735fd93ce19b36a415478c95826d934'
              image: driver
              tolerations: []
            gfd:
              nodeSelector: {}
              imagePullSecrets: []
              resources: {}
              affinity: {}
              podSecurityContext: {}
              repository: nvcr.io/nvidia
              securityContext: {}
              version: 'sha256:82e6f61b715d710c60ac14be78953336ea5dbc712244beb51036139d1cc8d526'
              image: gpu-feature-discovery
              sleepInterval: 60s
              tolerations: []
              migStrategy: none
            operator:
              defaultRuntime: crio
              deployGFD: true
              validator:
                image: cuda-sample
                imagePullSecrets: []
                repository: nvcr.io/nvidia/k8s
                version: 'sha256:2a30fe7e23067bc2c3f8f62a6867702a016af2b80b9f6ce861f3fea4dfd85bc2'
            toolkit:
              nodeSelector: {}
              imagePullSecrets: []
              resources: {}
              affinity: {}
              podSecurityContext: {}
              repository: nvcr.io/nvidia/k8s
              securityContext: {}
              version: 'sha256:b3f48033d7d9e1d5703b6ecffe35d219a45a17bdcf85374d78924dee9c8917be'
              image: container-toolkit
              tolerations: []
      register: cp_install
      until: cp_install is success
      retries: 30
      delay: 15
